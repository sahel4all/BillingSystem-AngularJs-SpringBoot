CREATE TABLE IF NOT EXISTS user_roles
(
role_id SERIAL NOT NULL,
role character varying(30),
CONSTRAINT role_pkey PRIMARY KEY (role_id)
);

CREATE TABLE IF NOT EXISTS users
( 
user_id SERIAL NOT NULL,
password character varying(100),
email character varying(30) NOT NULL,
mobile character varying(10),
login_enabled boolean,
role_id INTEGER NOT NULL ,
CONSTRAINT users_pkey PRIMARY KEY (user_id),
CONSTRAINT user_roles_fkey FOREIGN KEY (role_id)
REFERENCES user_roles (role_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS user_address
(
user_id integer NOT NULL,
address_line1 character varying(30),
address_line2 character varying(30),
city character varying(20),
state character varying(30),
country character varying(20),
pincode character varying(8),
CONSTRAINT user_address_pkey PRIMARY KEY (user_id),
CONSTRAINT user_address_fkey FOREIGN KEY (user_id)
REFERENCES users (user_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION
)

CREATE TABLE IF NOT EXISTS products
(
product_id SERIAL NOT NULL,
name character varying(50),
short_name character varying(15),
quantity integer,
discount numeric(15,6),
buying_cost numeric(15,6),
selling_cost numeric(15,6),
mrp numeric(15,6),
margin_amount numeric(15,6),
margin_percentage numeric(15,6),
CONSTRAINT products_pkey PRIMARY KEY (product_id)
)

insert into products values (1,'Lux soaps',100,30, 'lux soaps.');
insert into products values (2,'Paste',200,320, 'Pastess');

CREATE TABLE IF NOT EXISTS transaction_details
(
product_id NOT NULL,
product_name character varying(30),
discount integer,
quantity integer,
totalAmount numeric(15,6),
CONSTRAINT cashier_txn_details_fkey2 FOREIGN KEY (product_id)
REFERENCES products (product_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION
)

CREATE SEQUENCE INVOICE_SEQUENCE
INCREMENT BY 1
NO MINVALUE
MAXVALUE 1000000
START WITH 1
CACHE 1;

CREATE TABLE IF NOT EXISTS INVOICE
(
invoice_id integer NOT NULL,
totalAmount numeric(15,6),
CONSTRAINT INVOICE_pkey PRIMARY KEY (invoice_id)
)

CREATE TABLE IF NOT EXISTS SALES
(
sale_id SERIAL NOT NULL,
product_id NOT NULL,
invoice_id NOT NULL,
name character varying(50),
quantity integer,
discount numeric(15,6),
discount numeric(15,6),
totalAmount numeric(15,6),
CONSTRAINT SALES_pkey PRIMARY KEY (sale_id),
CONSTRAINT sales_fkey FOREIGN KEY (invoice_id)
REFERENCES INVOICE (invoice_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT sales_fkey2 FOREIGN KEY (product_id)
REFERENCES products (product_id) MATCH SIMPLE
ON UPDATE NO ACTION ON DELETE NO ACTION
)


